// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: bid/v1/bid.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    float32                `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Quantity  float32                `protobuf:"fixed32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AssetId   string                 `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	SessionId string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	LastUntil *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_until,json=lastUntil,proto3" json:"last_until,omitempty"`
}

func (x *BidResponse) Reset() {
	*x = BidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidResponse) ProtoMessage() {}

func (x *BidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidResponse.ProtoReflect.Descriptor instead.
func (*BidResponse) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{0}
}

func (x *BidResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BidResponse) GetQuantity() float32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BidResponse) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *BidResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BidResponse) GetLastUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUntil
	}
	return nil
}

// //// Create Bid
type CreateBidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     float32                `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Quantity   float32                `protobuf:"fixed32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AssetId    string                 `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	AssetOwner string                 `protobuf:"bytes,4,opt,name=asset_owner,json=assetOwner,proto3" json:"asset_owner,omitempty"`
	LastUntil  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_until,json=lastUntil,proto3" json:"last_until,omitempty"`
}

func (x *CreateBidRequest) Reset() {
	*x = CreateBidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBidRequest) ProtoMessage() {}

func (x *CreateBidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBidRequest.ProtoReflect.Descriptor instead.
func (*CreateBidRequest) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBidRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateBidRequest) GetQuantity() float32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateBidRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *CreateBidRequest) GetAssetOwner() string {
	if x != nil {
		return x.AssetOwner
	}
	return ""
}

func (x *CreateBidRequest) GetLastUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUntil
	}
	return nil
}

type CreateBidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid *BidResponse `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
}

func (x *CreateBidResponse) Reset() {
	*x = CreateBidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBidResponse) ProtoMessage() {}

func (x *CreateBidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBidResponse.ProtoReflect.Descriptor instead.
func (*CreateBidResponse) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBidResponse) GetBid() *BidResponse {
	if x != nil {
		return x.Bid
	}
	return nil
}

type GetUserBidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	UserFp  string `protobuf:"bytes,3,opt,name=user_fp,json=userFp,proto3" json:"user_fp,omitempty"`
	AssetId string `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *GetUserBidRequest) Reset() {
	*x = GetUserBidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBidRequest) ProtoMessage() {}

func (x *GetUserBidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBidRequest.ProtoReflect.Descriptor instead.
func (*GetUserBidRequest) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserBidRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserBidRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserBidRequest) GetUserFp() string {
	if x != nil {
		return x.UserFp
	}
	return ""
}

func (x *GetUserBidRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type GetUserBidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset       int64          `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	RowCount     int64          `protobuf:"varint,2,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	TotalResults int64          `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Bids         []*BidResponse `protobuf:"bytes,4,rep,name=bids,proto3" json:"bids,omitempty"`
}

func (x *GetUserBidResponse) Reset() {
	*x = GetUserBidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBidResponse) ProtoMessage() {}

func (x *GetUserBidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBidResponse.ProtoReflect.Descriptor instead.
func (*GetUserBidResponse) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserBidResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserBidResponse) GetRowCount() int64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *GetUserBidResponse) GetTotalResults() int64 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *GetUserBidResponse) GetBids() []*BidResponse {
	if x != nil {
		return x.Bids
	}
	return nil
}

type StreamOpenBidsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *StreamOpenBidsRequest) Reset() {
	*x = StreamOpenBidsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamOpenBidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOpenBidsRequest) ProtoMessage() {}

func (x *StreamOpenBidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOpenBidsRequest.ProtoReflect.Descriptor instead.
func (*StreamOpenBidsRequest) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{5}
}

func (x *StreamOpenBidsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type StreamOpenBidsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset       int64          `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	RowCount     int64          `protobuf:"varint,2,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	TotalResults int64          `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Bids         []*BidResponse `protobuf:"bytes,4,rep,name=bids,proto3" json:"bids,omitempty"`
}

func (x *StreamOpenBidsResponse) Reset() {
	*x = StreamOpenBidsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bid_v1_bid_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamOpenBidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOpenBidsResponse) ProtoMessage() {}

func (x *StreamOpenBidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bid_v1_bid_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOpenBidsResponse.ProtoReflect.Descriptor instead.
func (*StreamOpenBidsResponse) Descriptor() ([]byte, []int) {
	return file_bid_v1_bid_proto_rawDescGZIP(), []int{6}
}

func (x *StreamOpenBidsResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StreamOpenBidsResponse) GetRowCount() int64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *StreamOpenBidsResponse) GetTotalResults() int64 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *StreamOpenBidsResponse) GetBids() []*BidResponse {
	if x != nil {
		return x.Bids
	}
	return nil
}

var File_bid_v1_bid_proto protoreflect.FileDescriptor

var file_bid_v1_bid_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0xbd, 0x01, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x33, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x03, 0x62, 0x69,
	0x64, 0x22, 0x75, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x46, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x15, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x94, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x69,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x32, 0xc2, 0x01, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x69, 0x64, 0x12, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70,
	0x65, 0x6e, 0x42, 0x69, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f,
	0x70, 0x65, 0x6e, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x69, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x22, 0x5a, 0x20, 0x78,
	0x72, 0x66, 0x31, 0x39, 0x37, 0x69, 0x6c, 0x7a, 0x33, 0x35, 0x61, 0x71, 0x32, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bid_v1_bid_proto_rawDescOnce sync.Once
	file_bid_v1_bid_proto_rawDescData = file_bid_v1_bid_proto_rawDesc
)

func file_bid_v1_bid_proto_rawDescGZIP() []byte {
	file_bid_v1_bid_proto_rawDescOnce.Do(func() {
		file_bid_v1_bid_proto_rawDescData = protoimpl.X.CompressGZIP(file_bid_v1_bid_proto_rawDescData)
	})
	return file_bid_v1_bid_proto_rawDescData
}

var file_bid_v1_bid_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_bid_v1_bid_proto_goTypes = []any{
	(*BidResponse)(nil),            // 0: BidResponse
	(*CreateBidRequest)(nil),       // 1: CreateBidRequest
	(*CreateBidResponse)(nil),      // 2: CreateBidResponse
	(*GetUserBidRequest)(nil),      // 3: GetUserBidRequest
	(*GetUserBidResponse)(nil),     // 4: GetUserBidResponse
	(*StreamOpenBidsRequest)(nil),  // 5: StreamOpenBidsRequest
	(*StreamOpenBidsResponse)(nil), // 6: StreamOpenBidsResponse
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_bid_v1_bid_proto_depIdxs = []int32{
	7, // 0: BidResponse.last_until:type_name -> google.protobuf.Timestamp
	7, // 1: CreateBidRequest.last_until:type_name -> google.protobuf.Timestamp
	0, // 2: CreateBidResponse.bid:type_name -> BidResponse
	0, // 3: GetUserBidResponse.bids:type_name -> BidResponse
	0, // 4: StreamOpenBidsResponse.bids:type_name -> BidResponse
	1, // 5: BidService.CreateBid:input_type -> CreateBidRequest
	3, // 6: BidService.GetUserBid:input_type -> GetUserBidRequest
	5, // 7: BidService.StreamOpenBids:input_type -> StreamOpenBidsRequest
	2, // 8: BidService.CreateBid:output_type -> CreateBidResponse
	4, // 9: BidService.GetUserBid:output_type -> GetUserBidResponse
	6, // 10: BidService.StreamOpenBids:output_type -> StreamOpenBidsResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_bid_v1_bid_proto_init() }
func file_bid_v1_bid_proto_init() {
	if File_bid_v1_bid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bid_v1_bid_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bid_v1_bid_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bid_v1_bid_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateBidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bid_v1_bid_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserBidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bid_v1_bid_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserBidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bid_v1_bid_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StreamOpenBidsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bid_v1_bid_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StreamOpenBidsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bid_v1_bid_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bid_v1_bid_proto_goTypes,
		DependencyIndexes: file_bid_v1_bid_proto_depIdxs,
		MessageInfos:      file_bid_v1_bid_proto_msgTypes,
	}.Build()
	File_bid_v1_bid_proto = out.File
	file_bid_v1_bid_proto_rawDesc = nil
	file_bid_v1_bid_proto_goTypes = nil
	file_bid_v1_bid_proto_depIdxs = nil
}
